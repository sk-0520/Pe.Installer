name: Release Build

on: push

env:
  SOLUTION_PATH: Source\Pe.Installer.sln
  OUTPUT_PATH: Source/Pe.Installer/bin/x86/Release/Pe.Installer.exe
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:

  build:

    runs-on: windows-2022

    steps:
      - name: <Checkout> Repository
        uses: actions/checkout@v3

      - name: <Cache> Nuget
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-


      - name: <Add> msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: <Restore> Application
        shell: cmd
        run: |
          nuget restore ${{ env.SOLUTION_PATH }}

      - name: <Build> Application
        shell: cmd
        run: |
          msbuild ${{ env.SOLUTION_PATH }} /t:Build /p:Configuration=Release
          tree

      - name: <Artifact> Application
        uses: actions/upload-artifact@v3
        with:
          name: Pe.Installer
          path: ${{ env.OUTPUT_PATH }}

  deploy:

    needs: build

    #if: github.ref == 'refs/heads/master'

    runs-on: windows-2022

    steps:
      - name: <Checkout> Repository
        uses: actions/checkout@v3

      - name: <Get> Version
        uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version

      - name: <Delete> TEST Tag
        if: github.ref != 'refs/heads/master'
        continue-on-error: true
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ steps.get-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: <Create> Release
        uses: actions/github-script@v6
        with:
          script: |
            const releaseId = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.get-version.outputs.version }}",
              sha: context.sha
            })
